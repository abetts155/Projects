============================================================
0:00:00.010 - Start Program
============================================================

********** Analysing program 'matrixmultiply' **********
Checking program configuration...
============================================================
0:00:00.020 - COMPILING BEGIN
============================================================

============================================================
0:00:00.020 - COMPILING END
============================================================

...all good
============================================================
0:00:00.030 - TRACE PARSING RUN #1 (NO INLINING)
============================================================

Parsing gem5 traces
==========> matrixmultiply : header 5
int __count_5_4 = 0;
int __count_5_4 = 0; //Loop counter
==========> matrixmultiply : header 7
int __count_5_6 = 0;
int __count_7_3 = 0; //Loop counter
==========> matrixmultiply : header 9
int __count_7_8 = 0;
int __count_9_2 = 0; //Loop counter
==========> matrixmultiply : header 1
int __count_10 = 0;
int __count_9_10 = 0;
****************************************************************************************************
FUNCTION 'matrixmultiply'
****************************************************************************************************
  IGNORING MUTUAL INCLUSION: 10 and (5, 4)
  IGNORING MUTUAL INCLUSION: 10 and (9, 10)
  IGNORING MUTUAL INCLUSION: (5, 6) and 10
  IGNORING MUTUAL INCLUSION: (5, 6) and (5, 4)
  IGNORING MUTUAL INCLUSION: (5, 6) and (7, 8)
  IGNORING MUTUAL INCLUSION: (5, 6) and (9, 10)
  IGNORING MUTUAL INCLUSION: (7, 8) and 10
  IGNORING MUTUAL INCLUSION: (7, 8) and (5, 4)
  IGNORING MUTUAL INCLUSION: (7, 8) and (9, 10)
  IGNORING MUTUAL INCLUSION: (9, 10) and (5, 4)
****************************************************************************************************
FUNCTION 'matrixmultiply'
****************************************************************************************************
  ALWAYS EXECUTES: (5, 6), at least 25 time(s), at most 25 time(s)
  ALWAYS EXECUTES: (7, 8), at least 5 time(s), at most 5 time(s)
  ALWAYS EXECUTES: 10, at least 1 time(s), at most 1 time(s)
  ALWAYS EXECUTES: (9, 10), at least 1 time(s), at most 1 time(s)
  ALWAYS EXECUTES: (5, 4), at least 125 time(s), at most 125 time(s)
--------------------------------------------------
DEPENDENT EXECUTION CONJECTURES
--------------------------------------------------
****************************************************************************************************
FUNCTION 'matrixmultiply'
****************************************************************************************************
#ifdef CBMC
assert(__count_5_4  <= 6); // Loop counter property
assert(__count_7_3  <= 6); // Loop counter property
assert(__count_9_2  <= 6); // Loop counter property
assert(__count_5_6 >= 25); // Lower capacity constraint
assert(__count_5_6 <= 25); // Upper capacity constraint
assert(__count_7_8 >= 5); // Lower capacity constraint
assert(__count_7_8 <= 5); // Upper capacity constraint
assert(__count_10 >= 1); // Lower capacity constraint
assert(__count_10 <= 1); // Upper capacity constraint
assert(__count_9_10 >= 1); // Lower capacity constraint
assert(__count_9_10 <= 1); // Upper capacity constraint
assert(__count_5_4 >= 125); // Lower capacity constraint
assert(__count_5_4 <= 125); // Upper capacity constraint
#endif
HWMT = 298200
Doing WCET calculation on matrixmultiply
ILP(vanilla):: WCET(matrixmultiply)=506160 (SOLVE TIME=0.00279)
ILP(extra):: WCET(matrixmultiply)=298200 (SOLVE TIME=0.00297)
In matrixmultiply...
...#CFG edges              = 13
...#monitored              = 5
...#mutual exclusion pairs = 0
...#mutual inclusion pairs = 0
...#execution dependencies = 0
...#never execute          = 0
...#always execute         = 5
...#TOTAL mutual exclusion pairs = 0
...#TOTAL mutual inclusion pairs = 0
...#TOTAL execution dependencies = 0
...#TOTAL never execute          = 5
...#TOTAL always execute         = 5
============================================================
0:08:09.730 - End Program
Elapsed time: 0:08:09.720
============================================================

